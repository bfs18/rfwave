seed_everything: 4444

data:
  class_path: rfwave.dataset.VocosDataModule
  init_args:
    train_params:
      filelist_path: synta_filelist.train
      batch_size: 128
      num_workers: 8
      cache: True
      task: dur
      phoneset: synta_phoneset.th

    val_params:
      filelist_path: synta_filelist.valid
      batch_size: 16
      num_workers: 4
      cache: True
      task: dur
      phoneset: synta_phoneset.th

model:
  class_path: rfwave.experiment_reflow_duration.VocosExp
  init_args:
    guidance_scale: 1.
    p_uncond: 0.1
    initial_learning_rate: 2e-4
    num_warmup_steps: 10_000 # Optimizers warmup steps

    backbone:
      class_path: rfwave.models.VocosRFBackbone
      init_args:
        input_channels: 256
        output_channels: 1
        dim: 256
        intermediate_dim: 768
        num_layers: 4
        prev_cond: False
        num_bands: null

    input_adaptor:
      class_path: rfwave.input.DurInputAdaptor
      init_args:
        embedding_dim: 256
        vocab_size: 78
        n_attn_layers: 4

trainer:
  check_val_every_n_epoch: 10
  logger:
    class_path: pytorch_lightning.loggers.WandbLogger
    init_args:
      project: rfwave-tts
      save_dir: logs-rfwave-tts-dur/
      name: rfwave-tts-dur
  callbacks:
    - class_path: pytorch_lightning.callbacks.LearningRateMonitor
    - class_path: pytorch_lightning.callbacks.ModelSummary
      init_args:
        max_depth: 1
    - class_path: pytorch_lightning.callbacks.ModelCheckpoint
      init_args:
        monitor: val_loss
        filename: rfwave_checkpoint_{epoch}_{step}_{val_loss:.4f}
        save_top_k: 3
        save_last: true
    - class_path: rfwave.helpers.GradNormCallback

  # Lightning calculates max_steps across all optimizer steps (rather than number of batches)
  # This equals to 1M steps per generator and 1M per discriminator
  max_steps: 200_000
  # You might want to limit val batches when evaluating all the metrics, as they are time-consuming
  limit_val_batches: 10
  accelerator: gpu
  devices: [0]
  strategy: auto
  log_every_n_steps: 1000
  precision: 16-mixed
